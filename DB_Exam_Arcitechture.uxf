<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>560</x>
      <y>256</y>
      <w>200</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Dummy business layer
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>736</y>
      <w>80</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>MySQL
-

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>560</x>
      <y>96</y>
      <w>200</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Blackbox front-end
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>440</y>
      <w>1168</w>
      <h>352</h>
    </coordinates>
    <panel_attributes>Actual datalayer
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>104</x>
      <y>536</y>
      <w>80</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>MongoDB
-
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>536</y>
      <w>80</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>Neo4J
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1136</x>
      <y>536</y>
      <w>80</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>Redis
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>624</x>
      <y>176</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>176</x>
      <y>544</y>
      <w>560</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>680.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>728</x>
      <y>560</y>
      <w>24</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;220.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>496</x>
      <y>704</y>
      <w>216</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>bg=yellow
With a short time interval,
all information relevant to an invoice:
i.e order and customer details, are sent
to an SQL db for, book keeping purposes</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>192</x>
      <y>488</y>
      <w>200</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=yellow
Every 5 mintes or so,
all new information from mongoDB
is sent to Neo4J for analytic purposes.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>160</x>
      <y>328</y>
      <w>272</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=yellow
Everytime an update/change is made by
a user on the website, it's registered in mongoDB
i.e their current shopping cart, what was added, when
and what was removed.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>288</y>
      <w>432</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;310.0;10.0;10.0;520.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>792</x>
      <y>544</y>
      <w>360</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>430.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>832</x>
      <y>560</y>
      <w>264</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=yellow
Every 15 minutes or so, redis fetches data from 
Neo4j, productcatalog and cosumer habbits,
which are generated by Neo4js analytic cababilities</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>64</x>
      <y>576</y>
      <w>232</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>bg=yellow
MongoDBs primary functionality
is to store user information and
act as a cache for the users on the 
different platforms. I.e if the user
adds something to his/hers shopping cart,
it can be served back on a different device,
or if you clear your cookies in your browser.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>648</x>
      <y>472</y>
      <w>224</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=yellow
Neo4j is the primary DB, where all the data
is stored, and processed for analytics.
a lot of data is also distributed from Neo4j
to other sub DBs</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>560</y>
      <w>24</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>808</x>
      <y>704</y>
      <w>216</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>bg=yellow
The invoices, are then sent back to
neo4j for analytic purposes, so delivery time,
order status and the like can be analyzed
in neo4j.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>888</x>
      <y>352</y>
      <w>280</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>bg=yellow
The third part software is responsible for generating
relevant product reccomendations to the given user.
Hence on a time interval it fetches data from redis,
which continously stores a cache of the product catalog
as well as the consumer habbits. </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>64</x>
      <y>688</y>
      <w>232</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>bg=yellow
Inorder to avoid duplicate data, a flag could
be added on the shopping cart, indicating
if the information has been sent to the Neo4j.
Given a customer updates his/hers cart,
this flag is changed, and hence being sent
again.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1048</x>
      <y>288</y>
      <w>144</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;10.0;160.0;310.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>176</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>856</x>
      <y>256</y>
      <w>200</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Blackbox third party algorithms
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>752</x>
      <y>288</y>
      <w>120</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>512</x>
      <y>352</y>
      <w>288</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=yellow
Realistically all the databases communicates with a
business layer, not nessecarily the same, but to keep
the data flow clear and obvious, the arrows are pointing
directly to their sources/targets</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>512</x>
      <y>32</y>
      <w>288</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=yellow
Users information is generated here,
and is to be processed by one or more business layers,
which then sends data to the relevant database(s)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>160</x>
      <y>304</y>
      <w>136</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>bg=red
This will not be coded.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1184</x>
      <y>352</y>
      <w>136</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>bg=red
This will not be coded.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>296</x>
      <y>304</y>
      <w>136</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>bg=green
Create API</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>192</x>
      <y>464</y>
      <w>136</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>bg=green
Create python script</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>528</x>
      <y>656</y>
      <w>136</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>bg=green
Create python script</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>912</x>
      <y>520</y>
      <w>136</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>bg=green
Create python script</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>808</x>
      <y>656</y>
      <w>136</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>bg=green
Create python script</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>752</x>
      <y>760</y>
      <w>24</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>664</x>
      <y>848</y>
      <w>200</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Blackbox warehouse/fleet
-</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
