<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>594</x>
      <y>270</y>
      <w>225</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>Blackbox business layer
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>774</x>
      <y>810</y>
      <w>90</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>MySQL
-

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>594</x>
      <y>90</y>
      <w>225</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>Blackbox front-end
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>27</x>
      <y>477</y>
      <w>1314</w>
      <h>396</h>
    </coordinates>
    <panel_attributes>Actual datalayer
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>81</x>
      <y>585</y>
      <w>90</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>MongoDB
-
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>774</x>
      <y>585</y>
      <w>90</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>Neo4J
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1242</x>
      <y>585</y>
      <w>90</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>Redis
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>666</x>
      <y>180</y>
      <w>27</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>162</x>
      <y>594</y>
      <w>630</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>680.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>783</x>
      <y>612</y>
      <w>27</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;220.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>522</x>
      <y>774</y>
      <w>243</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>bg=yellow
With a short time interval,
all information relevant to an invoice:
i.e order and customer details, are sent
to an SQL db for, book keeping purposes</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>180</x>
      <y>531</y>
      <w>225</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>bg=yellow
Every 5 mintes or so,
all new information from mongoDB
is sent to Neo4J for analytic purposes.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>144</x>
      <y>324</y>
      <w>306</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>bg=yellow
Everytime an update/change is made by
a user on the website, it's registered in mongoDB
i.e their current shopping cart, what was added, when
and what was removed.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>126</x>
      <y>306</y>
      <w>486</w>
      <h>297</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;310.0;10.0;10.0;520.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>855</x>
      <y>594</y>
      <w>405</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>430.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>900</x>
      <y>612</y>
      <w>297</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>bg=yellow
Every 15 minutes or so, redis fetches data from 
Neo4j, productcatalog and cosumer habbits,
which are generated by Neo4js analytic cababilities</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>36</x>
      <y>630</y>
      <w>261</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>bg=yellow
MongoDBs primary functionality
is to store user information and
act as a cache for the users on the 
different platforms. I.e if the user
adds something to his/hers shopping cart,
it can be served back on a different device,
or if you clear your cookies in your browser.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>693</x>
      <y>513</y>
      <w>252</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>bg=yellow
Neo4j is the primary DB, where all the data
is stored, and processed for analytics.
a lot of data is also distributed from Neo4j
to other sub DBs</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>819</x>
      <y>612</y>
      <w>27</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>873</x>
      <y>774</y>
      <w>243</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>bg=yellow
The invoices, are then sent back to
neo4j for analytic purposes, so delivery time,
order status and the like can be analyzed
in neo4j.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>963</x>
      <y>378</y>
      <w>315</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>bg=yellow
The third part software is responsible for generating
relevant product reccomendations to the given user.
Hence on a time interval it fetches data from redis,
which continously stores a cache of the product catalog
as well as the consumer habbits. </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>36</x>
      <y>756</y>
      <w>261</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>bg=yellow
Inorder to avoid duplicate data, a flag could
be added on the shopping cart, indicating
if the information has been sent to the Neo4j.
Given a customer updates his/hers cart,
this flag is changed, and hence being sent
again.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1143</x>
      <y>306</y>
      <w>162</w>
      <h>297</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;10.0;160.0;310.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>180</y>
      <w>27</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>927</x>
      <y>270</y>
      <w>225</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>Blackbox third party algorithms
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>810</x>
      <y>306</y>
      <w>135</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>540</x>
      <y>378</y>
      <w>324</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>bg=yellow
Realistically all the databases communicates with a
business layer, not nessecarily the same, but to keep
the data flow clear and obvious, the arrows are pointing
directly to their sources/targets</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>540</x>
      <y>18</y>
      <w>324</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>bg=yellow
Users information is generated here,
and is to be processed by one or more business layers,
which then sends data to the relevant database(s)</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
